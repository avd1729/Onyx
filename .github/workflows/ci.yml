name: Go Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.x'
          
      - name: Cache Docker images
        id: docker-cache
        uses: actions/cache@v4
        with:
          path: /tmp/docker-images
          key: docker-images-${{ hashFiles('**/go.mod', '**/go.sum') }}-v1
          restore-keys: |
            docker-images-
            
      - name: Load cached Docker images
        if: steps.docker-cache.outputs.cache-hit == 'true'
        run: |
          if [ -d "/tmp/docker-images" ]; then
            for file in /tmp/docker-images/*.tar; do
              if [ -f "$file" ]; then
                echo "Loading $(basename "$file" .tar)..."
                docker load < "$file"
              fi
            done
          fi
          
      - name: Pull and save Docker images
        if: steps.docker-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p /tmp/docker-images
          
          # Define the Docker images your tests need
          IMAGES=(
            "python:3.11"
            "openjdk:17" 
            "gcc:12"
            "node:20"
            "rust:1.79"
          )
          
          for image in "${IMAGES[@]}"; do
            echo "Pulling and saving $image..."
            docker pull "$image"
            docker save "$image" > "/tmp/docker-images/$(echo "$image" | tr '/:' '_').tar"
          done
          
      - name: Verify Docker images
        run: docker images
        
      - name: Run Go tests
        run: go test -v ./tests/...
